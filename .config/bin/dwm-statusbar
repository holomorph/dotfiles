#!/bin/bash
#
# ~/.config/bin/dwm-statusbar
#
# Status bar for dwm. parts taken from
#  http://jasonwryan.com/
#  http://archlinux.me/w0ng
#  https://github.com/domac
# Uses modified version of w0ng's terminus2.bdf 
# with thermometer and battery icons

print_song_info() {
  song_info="$(ncmpcpp --now-playing '{{{%t}}|{%f}}' | head -c 50)"
  if [[ ! $song_info ]]; then
    song_info="Not playing"
  fi
  echo -ne "\x05Î ${song_info}"
}

print_volume() {
  device="$(cat /etc/asound.conf | tail -n1 | tr -d '[:alpha:] .')"
  if [ $(cat /proc/asound/card$device/id) == "PCH" ]; then
    volume="$(amixer get PCM | tail -n1 | sed -r 's/.*\[(.*)%\].*/\1/')"
  else
    volume="USB"
  fi
  printf "%-9b" "\04 Ô ${volume}"
}

print_mem_used() {
  mem_used="$(free -m | awk '/buffers\/cache/ {print $3}')"
  echo -ne " Þ ${mem_used}M"
}

print_cpu_temp() {
  core0="$(sensors -A | awk '/Core\ 0/ {print $3}' | head -c 3 | tr -d '+')"
  #core0_temp="$(sensors | grep 'Core 0' | awk 'sub(/,/,"") {print $3}')"
  #core1_temp="$(sensors | grep 'Core 0' | awk 'sub(/,/,"") {print $3}')"
  #coretemp="$(sensors | tail -n8 | head -n1 | awk '{print $4}')"
  echo -ne "Ç ${core0}C"
}

print_battery() {
  status=$(cat /sys/class/power_supply/BAT1/status)
  case $status in
  Discharging)
    sym="Á"
    battery="$(acpi | awk '{split($5,a,":"); print $4,"("a[1]":"a[2]")"}' | tr -d ',')"
    ;;
  Charging)
    sym="Å Á"
    if [ -z $(acpi | awk '{print $7}') ]; then
      battery="$(acpi | awk '{print $4}' | tr -d ',')"
    else
      battery="$(acpi | awk '{split($5,a,":"); print $4,"("a[1]":"a[2]")"}' | tr -d ',')"
    fi
    ;;
  Full)
    sym="À Á"
    battery="$(acpi | awk '{print $4}')"
    ;;
  esac
  echo -ne "\x09Ý\x08 ${sym} ${battery}"
}

print_datetime() {
  datetime="$(date "+%a %d %b %H:%M")"
  echo -ne "\x02 Õ ${datetime}"
}

# network (see: http://dzen.geekmode.org/dwiki/doku.php?id=dzen:network-meter)
# cpu (see:https://bbs.archlinux.org/viewtopic.php?pid=661641#p661641)
rx_old=$(cat /sys/class/net/wlan0/statistics/rx_bytes)
tx_old=$(cat /sys/class/net/wlan0/statistics/tx_bytes)

while true; do
  # get new cpu idle and total usage
  eval $(awk '/^cpu /{print "cpu_idle_now=" $5 "; cpu_total_now=" $2+$3+$4+$5 }' /proc/stat)
  cpu_interval=$((cpu_total_now-${cpu_total_old:-0}))
  # calculate cpu usage (%)
  let cpu_used="100 * ($cpu_interval - ($cpu_idle_now-${cpu_idle_old:-0})) / $cpu_interval"

  # get new rx/tx counts
  rx_now=$(cat /sys/class/net/wlan0/statistics/rx_bytes)
  tx_now=$(cat /sys/class/net/wlan0/statistics/tx_bytes)
  # calculate the rate (K) and total (M)
  let rx_rate=($rx_now-$rx_old)/1024
  let tx_rate=($tx_now-$tx_old)/1024
#  let rx_total=$rx_now/1048576
#  let tx_total=$tx_now/1048576

  # output vars
  print_cpu_used() { printf "%-12b" "\x09Ý \x01 Ï ${cpu_used}%"; }
  print_rx_rate() { printf "%-12b" "\x09Ý \x07Ð ${rx_rate}K"; }
  print_tx_rate() { printf "%-8b" "\x06Ñ ${tx_rate}K"; }

  # Pipe to status bar, not indented due to printing extra spaces/tabs
  xsetroot -name "$(print_song_info) $(print_volume)\
$(print_cpu_used) $(print_cpu_temp) $(print_mem_used) \
$(print_rx_rate) $(print_tx_rate) \
$(print_battery) $(print_datetime) "

  # reset old rates
  rx_old=$rx_now
  tx_old=$tx_now
  cpu_idle_old=$cpu_idle_now
  cpu_total_old=$cpu_total_now
  # loop stats every 4 seconds
  sleep 4
done
